/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import stage4.TicketRelated.*;

import stage4.OrdersAndPayment.*;

import javax.swing.table.DefaultTableModel;

import javax.swing.ListSelectionModel;

import java.util.ArrayList;



/**
 *
 * @author ivans
 */
public class GUI_OrderSeating extends javax.swing.JFrame {

    private Showtime showtime;
    
    private GUI_OrderShowtime guiOrderShowtime;
    
    private DetailTicketBought detail;
    
    private ArrayList<byte[]> chosenSeats;
    
    private GUI_MainMenuTicket guiMainMenuTicket;

    
    /**
     * Creates new form GUI_OrderSeating
     */
    public GUI_OrderSeating() {
        initComponents();
    }
    
    public GUI_OrderSeating(GUI_MainMenuTicket guiMainMenuTicket, GUI_OrderShowtime guiOrderShowtime, Showtime showtime, DetailTicketBought detail) {
        initComponents();
        
        this.detail = detail;
        
        this.guiOrderShowtime = guiOrderShowtime;
        
        this.chosenSeats = new ArrayList<>();
        
        this.guiMainMenuTicket = guiMainMenuTicket;
        
        this.tableSeating.setCellSelectionEnabled(true);
        this.tableSeating.setRowSelectionAllowed(false);
        this.tableSeating.setColumnSelectionAllowed(false);
        
        this.tableSeating.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        
        this.showtime = showtime;

        populateTableSeating();
        
    }


    public void populateTableSeating() {
        DefaultTableModel tableShowtimeModel = (DefaultTableModel) this.tableSeating.getModel();
                
        SeatingArrangement seatings = this.detail.getShowtime().getScreen().getSeating();
        
        boolean[][] seats = seatings.getSeats();
        
        for (int i=0; i<seats.length; i++) {
            Object[] aRow = new Object[seats.length];
            for (int j=0; j<seats[i].length; j++) {
                if (seats[i][j]) {
                    aRow[j] = "O";
                } else {
                    aRow[j] = "X";
                }
            }
            tableShowtimeModel.addRow(aRow);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableSeating = new javax.swing.JTable();
        returnButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        buttonBook = new javax.swing.JButton();
        buttonClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tableSeating.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10"
            }
        ));
        tableSeating.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tableSeating.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tableSeating.setTableHeader(null);
        jScrollPane1.setViewportView(tableSeating);

        returnButton.setText("Return");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        buttonBook.setText("Book");
        buttonBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBookActionPerformed(evt);
            }
        });

        buttonClear.setText("Clear");
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(returnButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonClear)
                .addGap(77, 77, 77)
                .addComponent(buttonBook)
                .addGap(42, 42, 42)
                .addComponent(nextButton)
                .addGap(79, 79, 79))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnButton)
                    .addComponent(nextButton)
                    .addComponent(buttonBook)
                    .addComponent(buttonClear))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        this.guiOrderShowtime.setVisible(true);
    }//GEN-LAST:event_returnButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        // TODO add your handling code here:
                
        this.detail.setChosenSeats(this.chosenSeats);
        this.setVisible(false);
        GUI_OrderConfirmation guiOrderConfirmation = new GUI_OrderConfirmation(this.guiMainMenuTicket, this, this.detail);
        guiOrderConfirmation.setVisible(true);
    }//GEN-LAST:event_nextButtonActionPerformed

    private void buttonBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBookActionPerformed
        // TODO add your handling code here:
        byte row = (byte) this.tableSeating.getSelectedRow();
        byte col = (byte) this.tableSeating.getSelectedColumn();
        
        if (!this.detail.checkSeat((byte) (row+1), (byte) (col+1))) {
            this.tableSeating.setValueAt("R", row, col);
            
            this.showtime.getScreen().getSeating().setSeatStatus(row, col);
            byte[] aSeat = {(byte) (row), (byte) (col)};
            this.chosenSeats.add(aSeat);
            
            if (this.showtime.getScreen().getScreenType().equals("normal")) {
                this.detail.addNormalNum();
            } else {
                this.detail.addImaxNum();
            }
        }
    }//GEN-LAST:event_buttonBookActionPerformed

    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
        // TODO add your handling code here:
        SeatingArrangement seatings = this.showtime.getScreen().getSeating();
        
        for (byte[] aSeat : this.chosenSeats) {
            this.tableSeating.setValueAt("X", aSeat[0], aSeat[1]);
            seatings.setSeatStatus(aSeat[0], aSeat[1]);
        }
        
        this.detail.setImaxNum((byte) 0);
        this.detail.setNormalNum((byte) 0);
        this.chosenSeats.clear();
    }//GEN-LAST:event_buttonClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_OrderSeating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_OrderSeating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_OrderSeating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_OrderSeating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_OrderSeating().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBook;
    private javax.swing.JButton buttonClear;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton returnButton;
    private javax.swing.JTable tableSeating;
    // End of variables declaration//GEN-END:variables
}
