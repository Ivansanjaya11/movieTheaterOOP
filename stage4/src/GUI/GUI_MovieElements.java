/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import stage4.TicketRelated.Movie;
import stage4.TicketRelated.MovieManager;
import stage4.TicketRelated.ScreenManager;
import stage4.TicketRelated.Screen;
import stage4.TicketRelated.ShowtimeManager;
import stage4.TicketRelated.Showtime;

/**
 *
 * @author lccra
 */
public class GUI_MovieElements extends javax.swing.JFrame {

    private GUI_MainMenuTicket guiMainMenuTicket;
    
    private ArrayList<Movie> movieList;
    private ArrayList<Screen> screenList;
    private ArrayList<Showtime> showtimeList;

    /**
     * Creates new form GUI_MovieElements
     */
    public GUI_MovieElements() {
        initComponents();
        populateTableMovies();
        populateTableScreen();
        populateTableShowtime();

    }
    
    public GUI_MovieElements(GUI_MainMenuTicket guiMainMenuTicket) {
        initComponents();
        
        this.guiMainMenuTicket = guiMainMenuTicket;
        
        populateTableMovies();
        populateTableScreen();
        //populateTableShowtime();

    }
    
    public void populateTableMovies() {
        this.movieList = MovieManager.getMovies();
        DefaultTableModel movieModel = (DefaultTableModel) this.tblEditMovie.getModel();

        
        Object[][] movieRows = new Object[movieList.size()][4];
        for (int i = 0; i < movieList.size(); i++) {
            movieRows[i][0] = movieList.get(i).getMovieID();
            movieRows[i][1] = movieList.get(i).getTitle();
            movieRows[i][2] = movieList.get(i).getGenre();
            movieRows[i][3] = movieList.get(i).getDurationMinutes();
            
            movieModel.addRow(movieRows[i]);
    }
    }
    
    public void populateTableScreen() {
        this.screenList = ScreenManager.getScreens();
        DefaultTableModel screenModel = (DefaultTableModel) this.tblEditScreen.getModel();
        
        Object[][] screenRows = new Object[screenList.size()][2];
        for (int i = 0; i < screenList.size(); i++) {
            screenRows[i][0] = screenList.get(i).getScreenID();
            screenRows[i][1] = screenList.get(i).getScreenType();
            
            screenModel.addRow(screenRows[i]);
        }
    }
    
    public void populateTableShowtime() {
        this.showtimeList = ShowtimeManager.getShowtimes();
        DefaultTableModel showtimeModel = (DefaultTableModel) this.tblEditShowtime.getModel();
        
        Object[][] showtimeRows = new Object[showtimeList.size()][4];
        for (int i = 0; i < showtimeList.size(); i++) {
            showtimeRows[i][0] = showtimeList.get(i).getShowtimeID();
            showtimeRows[i][1] = showtimeList.get(i).getMovie().getTitle();
            showtimeRows[i][2] = showtimeList.get(i).getStartTime();
            showtimeRows[i][3] = showtimeList.get(i).getEndTime();
            
            showtimeModel.addRow(showtimeRows[i]);
        }
    }
    
    public void resetRowsMovies() {
        DefaultTableModel movieModel = (DefaultTableModel) this.tblEditMovie.getModel();
        movieModel.setRowCount(0);
    }
    
    public void resetRowsScreen() {
        DefaultTableModel screenModel = (DefaultTableModel) this.tblEditScreen.getModel();
        screenModel.setRowCount(0);
    }
    
    public void resetRowsShowtime() {
        DefaultTableModel showtimeModel = (DefaultTableModel) this.tblEditShowtime.getModel();
        showtimeModel.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        tabMovies = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        sTabEditMovie = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEditMovie = new javax.swing.JTable();
        btnAddMovie = new javax.swing.JButton();
        btnRemoveMovie = new javax.swing.JButton();
        btnUpdateMovie = new javax.swing.JButton();
        returnButtonMovie = new javax.swing.JButton();
        tabScreen = new javax.swing.JPanel();
        sTabScreen = new javax.swing.JTabbedPane();
        sTabEditScreen = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEditScreen = new javax.swing.JTable();
        btnAddScreen = new javax.swing.JButton();
        btnRemoveScreen = new javax.swing.JButton();
        btnUpdateScreen = new javax.swing.JButton();
        returnButtonScreen = new javax.swing.JButton();
        tabShowtime = new javax.swing.JPanel();
        sTabShowtime = new javax.swing.JTabbedPane();
        sTabEditShowtime = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblEditShowtime = new javax.swing.JTable();
        btnAddShowtime = new javax.swing.JButton();
        btnRemoveShowtime = new javax.swing.JButton();
        btnUpdateShowtime = new javax.swing.JButton();
        returnButtonShowtime = new javax.swing.JButton();

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Movie Elements");

        tblEditMovie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movie ID:", "Title", "Genre", "Duration (Min)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEditMovie);

        btnAddMovie.setText("Add");
        btnAddMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMovieActionPerformed(evt);
            }
        });

        btnRemoveMovie.setText("Remove");
        btnRemoveMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveMovieActionPerformed(evt);
            }
        });

        btnUpdateMovie.setText("Update");
        btnUpdateMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateMovieActionPerformed(evt);
            }
        });

        returnButtonMovie.setText("Return");
        returnButtonMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonMovieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sTabEditMovieLayout = new javax.swing.GroupLayout(sTabEditMovie);
        sTabEditMovie.setLayout(sTabEditMovieLayout);
        sTabEditMovieLayout.setHorizontalGroup(
            sTabEditMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sTabEditMovieLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sTabEditMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddMovie)
                    .addComponent(btnRemoveMovie)
                    .addComponent(btnUpdateMovie)
                    .addComponent(returnButtonMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        sTabEditMovieLayout.setVerticalGroup(
            sTabEditMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sTabEditMovieLayout.createSequentialGroup()
                .addGroup(sTabEditMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sTabEditMovieLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(btnAddMovie)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemoveMovie)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdateMovie)
                        .addGap(60, 60, 60)
                        .addComponent(returnButtonMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sTabEditMovieLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Edit Movie", sTabEditMovie);

        javax.swing.GroupLayout tabMoviesLayout = new javax.swing.GroupLayout(tabMovies);
        tabMovies.setLayout(tabMoviesLayout);
        tabMoviesLayout.setHorizontalGroup(
            tabMoviesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        tabMoviesLayout.setVerticalGroup(
            tabMoviesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabMoviesLayout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Movie", tabMovies);

        tblEditScreen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Screen ID", "Screen Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblEditScreen);

        btnAddScreen.setText("Add");
        btnAddScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddScreenActionPerformed(evt);
            }
        });

        btnRemoveScreen.setText("Remove");
        btnRemoveScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveScreenActionPerformed(evt);
            }
        });

        btnUpdateScreen.setText("Update");
        btnUpdateScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateScreenActionPerformed(evt);
            }
        });

        returnButtonScreen.setText("Return");
        returnButtonScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonScreenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sTabEditScreenLayout = new javax.swing.GroupLayout(sTabEditScreen);
        sTabEditScreen.setLayout(sTabEditScreenLayout);
        sTabEditScreenLayout.setHorizontalGroup(
            sTabEditScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sTabEditScreenLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(sTabEditScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemoveScreen)
                    .addComponent(btnAddScreen)
                    .addComponent(btnUpdateScreen)
                    .addComponent(returnButtonScreen))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        sTabEditScreenLayout.setVerticalGroup(
            sTabEditScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sTabEditScreenLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
            .addGroup(sTabEditScreenLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(btnAddScreen)
                .addGap(18, 18, 18)
                .addComponent(btnRemoveScreen)
                .addGap(18, 18, 18)
                .addComponent(btnUpdateScreen)
                .addGap(63, 63, 63)
                .addComponent(returnButtonScreen)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sTabScreen.addTab("Edit Screen", sTabEditScreen);

        javax.swing.GroupLayout tabScreenLayout = new javax.swing.GroupLayout(tabScreen);
        tabScreen.setLayout(tabScreenLayout);
        tabScreenLayout.setHorizontalGroup(
            tabScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sTabScreen)
        );
        tabScreenLayout.setVerticalGroup(
            tabScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sTabScreen)
        );

        jTabbedPane1.addTab("Screen", tabScreen);

        tblEditShowtime.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Showtime ID", "Movie Title", "Start Time", "End Time"
            }
        ));
        jScrollPane3.setViewportView(tblEditShowtime);

        btnAddShowtime.setText("Add");
        btnAddShowtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddShowtimeActionPerformed(evt);
            }
        });

        btnRemoveShowtime.setText("Remove");
        btnRemoveShowtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveShowtimeActionPerformed(evt);
            }
        });

        btnUpdateShowtime.setText("Update");
        btnUpdateShowtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateShowtimeActionPerformed(evt);
            }
        });

        returnButtonShowtime.setText("Return");
        returnButtonShowtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonShowtimeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sTabEditShowtimeLayout = new javax.swing.GroupLayout(sTabEditShowtime);
        sTabEditShowtime.setLayout(sTabEditShowtimeLayout);
        sTabEditShowtimeLayout.setHorizontalGroup(
            sTabEditShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sTabEditShowtimeLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(sTabEditShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sTabEditShowtimeLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(sTabEditShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddShowtime)
                            .addComponent(btnRemoveShowtime)
                            .addComponent(btnUpdateShowtime))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sTabEditShowtimeLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(returnButtonShowtime)
                        .addContainerGap())))
        );
        sTabEditShowtimeLayout.setVerticalGroup(
            sTabEditShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sTabEditShowtimeLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
            .addGroup(sTabEditShowtimeLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(btnAddShowtime)
                .addGap(18, 18, 18)
                .addComponent(btnRemoveShowtime)
                .addGap(18, 18, 18)
                .addComponent(btnUpdateShowtime)
                .addGap(52, 52, 52)
                .addComponent(returnButtonShowtime)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sTabShowtime.addTab("Edit Showtime", sTabEditShowtime);

        javax.swing.GroupLayout tabShowtimeLayout = new javax.swing.GroupLayout(tabShowtime);
        tabShowtime.setLayout(tabShowtimeLayout);
        tabShowtimeLayout.setHorizontalGroup(
            tabShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sTabShowtime)
        );
        tabShowtimeLayout.setVerticalGroup(
            tabShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sTabShowtime)
        );

        jTabbedPane1.addTab("Showtime", tabShowtime);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        setSize(new java.awt.Dimension(414, 467));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMovieActionPerformed

        new GUI_MovieAdd(this).setVisible(true);

    }//GEN-LAST:event_btnAddMovieActionPerformed

    private void btnRemoveMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveMovieActionPerformed

        int selectedRow = this.tblEditMovie.getSelectedRow();
        
        if (selectedRow != -1) {
            MovieManager.removeMovie((byte) selectedRow);
            
            resetRowsMovies();
            populateTableMovies();
        }
        
    }//GEN-LAST:event_btnRemoveMovieActionPerformed

    private void btnAddScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddScreenActionPerformed

        new GUI_ScreenAdd(this).setVisible(true);
        
    }//GEN-LAST:event_btnAddScreenActionPerformed

    private void btnAddShowtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddShowtimeActionPerformed

        new GUI_ShowtimeAdd().setVisible(true);

    }//GEN-LAST:event_btnAddShowtimeActionPerformed

    private void btnUpdateShowtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateShowtimeActionPerformed

        new GUI_ShowtimeUpdate().setVisible(true);
       
    }//GEN-LAST:event_btnUpdateShowtimeActionPerformed

    private void btnUpdateScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateScreenActionPerformed
        int selectedRow = this.tblEditScreen.getSelectedRow();
        
        new GUI_ScreenUpdate(this, selectedRow).setVisible(true);

    }//GEN-LAST:event_btnUpdateScreenActionPerformed

    private void btnUpdateMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateMovieActionPerformed
        int selectedRow = this.tblEditMovie.getSelectedRow();

        if (selectedRow != -1) {
            new GUI_MovieUpdate(this, selectedRow).setVisible(true);
        }
    }//GEN-LAST:event_btnUpdateMovieActionPerformed

    private void btnRemoveScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveScreenActionPerformed

        int selectedRow = this.tblEditScreen.getSelectedRow();
        
        if (selectedRow != -1) {
            ScreenManager.removeScreen((byte) selectedRow);
            
            resetRowsScreen();
            populateTableScreen();
        }   

    }//GEN-LAST:event_btnRemoveScreenActionPerformed

    private void btnRemoveShowtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveShowtimeActionPerformed

        int selectedRow = this.tblEditShowtime.getSelectedRow();
        
        if (selectedRow != -1) {
            ShowtimeManager.removeShowtime((byte) selectedRow);
            
            resetRowsShowtime();
            populateTableShowtime();
        }

    }//GEN-LAST:event_btnRemoveShowtimeActionPerformed

    private void returnButtonScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonScreenActionPerformed
        // TODO add your handling code here:
        this.dispose();
        this.guiMainMenuTicket.setVisible(true);
    }//GEN-LAST:event_returnButtonScreenActionPerformed

    private void returnButtonShowtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonShowtimeActionPerformed
        // TODO add your handling code here:
        this.dispose();
        this.guiMainMenuTicket.setVisible(true);
    }//GEN-LAST:event_returnButtonShowtimeActionPerformed

    private void returnButtonMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonMovieActionPerformed
        // TODO add your handling code here:
        this.dispose();
        this.guiMainMenuTicket.setVisible(true);
    }//GEN-LAST:event_returnButtonMovieActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_MovieElements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_MovieElements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_MovieElements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_MovieElements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_MovieElements().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMovie;
    private javax.swing.JButton btnAddScreen;
    private javax.swing.JButton btnAddShowtime;
    private javax.swing.JButton btnRemoveMovie;
    private javax.swing.JButton btnRemoveScreen;
    private javax.swing.JButton btnRemoveShowtime;
    private javax.swing.JButton btnUpdateMovie;
    private javax.swing.JButton btnUpdateScreen;
    private javax.swing.JButton btnUpdateShowtime;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JButton returnButtonMovie;
    private javax.swing.JButton returnButtonScreen;
    private javax.swing.JButton returnButtonShowtime;
    private javax.swing.JPanel sTabEditMovie;
    private javax.swing.JPanel sTabEditScreen;
    private javax.swing.JPanel sTabEditShowtime;
    private javax.swing.JTabbedPane sTabScreen;
    private javax.swing.JTabbedPane sTabShowtime;
    private javax.swing.JPanel tabMovies;
    private javax.swing.JPanel tabScreen;
    private javax.swing.JPanel tabShowtime;
    private javax.swing.JTable tblEditMovie;
    private javax.swing.JTable tblEditScreen;
    private javax.swing.JTable tblEditShowtime;
    // End of variables declaration//GEN-END:variables
}
